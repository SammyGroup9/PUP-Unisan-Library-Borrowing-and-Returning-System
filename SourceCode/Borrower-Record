/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.librarymanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Errica
 */
public class BorrowersRecord extends javax.swing.JFrame {

    /**
     * Creates new form BorrowersRecord
     */
    public BorrowersRecord() {
        initComponents();
        displayBorrowers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtStu_id = new javax.swing.JTextField();
        viewBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAddedbooks = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnBack = new javax.swing.JButton();
        btnViewReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(128, 0, 0));
        jPanel1.setAutoscrolls(true);

        tblRecords.setBackground(new java.awt.Color(204, 204, 204));
        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "firstname", "lastname"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        jLabel2.setBackground(new java.awt.Color(255, 0, 204));
        jLabel2.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Borrower ID");

        txtStu_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStu_idActionPerformed(evt);
            }
        });

        viewBtn.setBackground(new java.awt.Color(255, 204, 0));
        viewBtn.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        viewBtn.setText("View Books");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 215, 0));
        jLabel3.setText("VIEW BORROWED BOOKS");

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 215, 0));
        jLabel1.setText("BORROWER RECORDS");

        tblAddedbooks.setBackground(new java.awt.Color(204, 204, 204));
        tblAddedbooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "book_id", "book_name", "book_quantity", "date_borrow"
            }
        ));
        jScrollPane2.setViewportView(tblAddedbooks);

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Borrower Information");

        jSeparator1.setForeground(new java.awt.Color(255, 204, 0));

        btnBack.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewReturn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnViewReturn.setText("Returning History");
        btnViewReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnViewReturn)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtStu_id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(viewBtn)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(203, 203, 203))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(189, 189, 189))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewReturn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtStu_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        String stu_id_s = txtStu_id.getText();
        int stu_id = Integer.parseInt(stu_id_s);
        if(stu_id_s.equals("")){
            JOptionPane.showMessageDialog(null, "Can't process field is empty!");
        }else{
            try{
                boolean isValid = isIdRegistered(stu_id);
                if(!isValid){
                    JOptionPane.showMessageDialog(null,"Id is not found!");
                }
                else{
                    displayUserBooks(stu_id);
                }
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Field contain number(s) only.");
            }
        }
         

    }                                       

    private void txtStu_idActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        setVisible(false);
        new AdminInventory().setVisible(true);
    }                                       

    private void btnViewReturnActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        setVisible(false);
        new ReturnedRecords().setVisible(true);
                                  
    }                                             

    public void displayBorrowers(){
        Object[][] data=null;
        String[] columnNames ={"id","firstname","lastname"};
        DefaultTableModel displayModel = new DefaultTableModel(data,columnNames){
            
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblRecords.getTableHeader().setResizingAllowed(false);
        tblRecords.getTableHeader().setReorderingAllowed(false);
        tblRecords.setModel(displayModel);
        try(Connection conn = DatabaseConnector.getConnection()){
            String sql = "SELECT * FROM public.users ORDER BY stu_id ASC";
            try(PreparedStatement stmt = conn.prepareStatement(sql);
                    ResultSet rs = stmt.executeQuery()) {
                while (rs.next()){
                    String stu_id = String.valueOf(rs.getInt("stu_id"));
                    String user_firstname = rs.getString("user_firstname");
                    String user_lastname = rs.getString("user_lastname");
                    String list[] = {stu_id,user_firstname,user_lastname};
                    DefaultTableModel tblModel = (DefaultTableModel)tblRecords.getModel();
                    tblModel.addRow(list);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Database connection error: " + e.getMessage());
            
        }
         
    }
        public boolean isIdRegistered(int stu_id){
        try(Connection conn = DatabaseConnector.getConnection()){
            String sql = "SELECT * FROM public.users WHERE stu_id = ? ";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, stu_id);
            ResultSet rs = stmt.executeQuery();
            if(rs.next()){
                return true;
            }else{
                return false;
            }
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Database connection error: " + e.getMessage());
            
        }
         return false;
    }

        
    public void displayUserBooks(int stu_id){
        Object[][] data=null;
        String[] columnNames ={"book_id","book_name","book_quantity","date_borrow"};
        DefaultTableModel displayModel = new DefaultTableModel(data,columnNames){
            
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblAddedbooks.getTableHeader().setResizingAllowed(false);
        tblAddedbooks.getTableHeader().setReorderingAllowed(false);
        tblAddedbooks.setModel(displayModel);
        try(Connection conn = DatabaseConnector.getConnection()){
            String sql = "SELECT * FROM public.borrowed_books WHERE stu_id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, stu_id);
            ResultSet rs = stmt.executeQuery();            
            if (rs.next()){
                String book_id1 = rs.getString("book_id");
                String book_name1 = rs.getString("book_name");
                String book_quantity1 = String.valueOf(rs.getInt("book_quantity"));
                String date_borrow1 =rs.getString("date_borrow");
//                String stu_id1 = rs.getString("stu_id");
                String list1[] = {book_id1,book_name1,book_quantity1,date_borrow1};
                DefaultTableModel tblModel1 = (DefaultTableModel)tblAddedbooks.getModel();
                tblModel1.addRow(list1);
                while(rs.next()){
                    String book_id = rs.getString("book_id");
                    String book_name = rs.getString("book_name");
                    String book_quantity = String.valueOf(rs.getInt("book_quantity"));
                    String date_borrow = rs.getString("date_borrow");
//                    String stu_id = rs.getString("stu_id");
                    String list[] = {book_id,book_name,book_quantity,date_borrow};
                    DefaultTableModel tblModel = (DefaultTableModel)tblAddedbooks.getModel();
                    tblModel.addRow(list);
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"No record(s) found.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Database connection error: " + e.getMessage()); 
        }
        
    }
        
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowersRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowersRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowersRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowersRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowersRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable tblAddedbooks;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTextField txtStu_id;
    private javax.swing.JButton viewBtn;
    // End of variables declaration                   
}
