/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.librarymanagementsystem;

import java.sql.Connection;
//import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Errica
 */
public class RoomLibrary extends javax.swing.JFrame {

    /**
     * Creates new form JBox
     */
    public RoomLibrary() {
        initComponents();
        dt();
        dr();

        displayBooks();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        btnSubmitInfo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblBook = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        txtBookLists = new javax.swing.JTextField();
        comboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLibraryBooks = new javax.swing.JTable();
        lblStudentId = new javax.swing.JLabel();
        studentID11 = new javax.swing.JLabel();
        comboGenre = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        l_date = new javax.swing.JLabel();
        btnGenre = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblConfirm = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblEnterId = new javax.swing.JLabel();
        txtEnterName = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();
        btnUserLogout = new javax.swing.JButton();
        txtQty = new javax.swing.JTextField();
        id_stu = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        r_date = new javax.swing.JLabel();
        txtDborrow = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(51, 51, 255));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(128, 0, 0));

        btnSubmitInfo.setBackground(new java.awt.Color(255, 153, 0));
        btnSubmitInfo.setFont(new java.awt.Font("Franklin Gothic Book", 3, 14)); // NOI18N
        btnSubmitInfo.setText("ADD TO THE TABLE");
        btnSubmitInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitInfoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 215, 0));
        jLabel3.setText("BOOKSHELF");

        lblBook.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblBook.setForeground(new java.awt.Color(255, 255, 255));
        lblBook.setText("BOOK NAME");

        lblQuantity.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblQuantity.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantity.setText("QUANTITY");

        txtBookLists.setEditable(false);
        txtBookLists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookListsActionPerformed(evt);
            }
        });

        comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        comboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox2ActionPerformed(evt);
            }
        });

        tblLibraryBooks.setBackground(new java.awt.Color(204, 204, 204));
        tblLibraryBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "book_id", "book_name", "book_quantity", "book_author"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLibraryBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibraryBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLibraryBooks);

        lblStudentId.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        lblStudentId.setForeground(new java.awt.Color(255, 255, 255));
        lblStudentId.setText("Borrower ID:");

        studentID11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        studentID11.setForeground(new java.awt.Color(255, 255, 255));
        studentID11.setText("id");

        comboGenre.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        comboGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CLASSIC", "GRAPHIC NOVEL", "MYSTERY", "DOCUMENTARY" }));
        comboGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGenreActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("DATE");

        l_date.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        l_date.setForeground(new java.awt.Color(255, 255, 255));
        l_date.setText("0");

        btnGenre.setText("SEARCH");
        btnGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentID11, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_date, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSubmitInfo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblBook)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBookLists, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(comboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGenre)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel3)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentId)
                    .addComponent(studentID11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(l_date))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBook)
                            .addComponent(txtBookLists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantity)
                            .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(btnSubmitInfo)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addContainerGap(514, Short.MAX_VALUE))))
        );

        jTabbedPane2.addTab("BOOKSHELF", jPanel2);

        jTabbedPane1.addTab("LIBRARY", jTabbedPane2);

        jTabbedPane3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(128, 0, 0));

        tblConfirm.setBackground(new java.awt.Color(204, 204, 204));
        tblConfirm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "book_id", "book_name", "book_quantity", "stu_id", "date_borrow"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConfirmMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblConfirm);

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Heavy", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 215, 0));
        jLabel1.setText("Borrower's Record");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BOOKS YOU ADDED");

        lblEnterId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEnterId.setForeground(new java.awt.Color(255, 255, 255));
        lblEnterId.setText("  BOOK NAME");

        txtEnterName.setEditable(false);
        txtEnterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnterNameActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(255, 215, 0));
        btnRemove.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRemove.setText("Return Book");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnUserLogout.setBackground(new java.awt.Color(255, 204, 0));
        btnUserLogout.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnUserLogout.setText("Log Out");
        btnUserLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserLogoutActionPerformed(evt);
            }
        });

        txtQty.setEditable(false);

        id_stu.setEditable(false);
        id_stu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_stuActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("QUANTITY");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("BORROWER ID");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date");

        r_date.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        r_date.setForeground(new java.awt.Color(255, 255, 255));
        r_date.setText("0");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DATE BORROWED");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(219, 219, 219))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUserLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 590, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(r_date, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(5, 5, 5))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblEnterId)
                                .addGap(31, 31, 31)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnterName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDborrow, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(id_stu, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(r_date))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblEnterId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEnterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(id_stu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDborrow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove)
                    .addComponent(btnUserLogout))
                .addGap(30, 30, 30))
        );

        jTabbedPane3.addTab("STUDENTS RECORD", jPanel1);

        jTabbedPane1.addTab("RECORDS", jTabbedPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        
        public void dt(){
            
       Date d = new Date();    
            
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
       String dd = sdf.format(d);
       l_date.setText(dd);
       
        }
        
        public void dr(){
            
       Date d = new Date();    
            
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
       String dd = sdf.format(d);
       r_date.setText(dd);
       
        }
    
    
    
    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel(null, new String[]{"book_id", "book_name", "book_quantity","date_borrow"});
        displayBooks();
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        if(selectedIndex== 1){
            String id = studentID11.getText();
            int idhold = Integer.parseInt(id);
              displayIDBooks( idhold);
            
        
        }
        
    }                                         

    private void btnUserLogoutActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        setVisible(false);
        new BorrowerLogin().setVisible(true);
       
    }                                             

    private void comboBox2ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        String numOFBooks = comboBox2.getSelectedItem().toString();
       
    }                                         

    private void txtBookListsActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void btnSubmitInfoActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here
//        int qty = (int)spnQty.getValue();
        String book_name = txtBookLists.getText();
        String book_quantity = comboBox2.getSelectedItem().toString();
        String stu_id_s = studentID11.getText();
        String date_s = l_date.getText();
//        String quan = DataHandler.getBookQuantity(book_name);
//          int  book_quantity quantityBorrow = new book_quantity();
        if(book_name.equals("")){
            JOptionPane.showMessageDialog(null,"Can't process field is empty");
        }else{
            
            int stu_id = Integer.parseInt(stu_id_s);
        
            int book_quantity1 = Integer.parseInt(book_quantity);
            String book_id_s = DataHandler.getBookID(book_name);
            int book_id = Integer.parseInt(book_id_s);
//            String val = "0";
            boolean isExist = DataHandler.isBookExist(book_id, book_name,book_quantity1, stu_id,date_s);
            if(isExist){
                JOptionPane.showMessageDialog(null," You have already added this Book");

                }else{
                    boolean isEnough = DataHandler.quantitybook(book_name,book_quantity1);
                    if(isEnough){
                        //perform update
                        DataHandler.addBorrow(book_id, book_name,book_quantity1, stu_id,date_s);
                        displayBooks();
                    }                    
            }
        }

        //        setVisible(false);
        //        new Confirmation().setVisible(true);
    }                                             

    private void tblLibraryBooksMouseClicked(java.awt.event.MouseEvent evt) {                                             
        // TODO add your handling code here:
         int i = tblLibraryBooks.getSelectedRow();
        TableModel model = tblLibraryBooks.getModel();
        txtBookLists.setText(model.getValueAt(i,1).toString());
       // txtQuantity.setText(model.getValueAt(i,2).toString());
//        txtBook_quantity.setText(model.getValueAt(i,2).toString());
    }                                            

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        String book_name = txtEnterName.getText();
        String book_quantity = txtQty.getText();
        String idh = id_stu.getText();
        String date_borrow = txtDborrow.getText();
        String r_date_s = r_date.getText();

      
        int idint = Integer.parseInt(idh);
        
        int book_quantity1 = Integer.parseInt(book_quantity);
        DataHandler.returnBook(book_name, book_quantity1);
        DataHandler.returnBooks(idint, book_name,book_quantity1,date_borrow,r_date_s);
        DataHandler.delreturn(book_name, idint);
      DefaultTableModel model = new DefaultTableModel(null, new String[]{"book_id", "book_name", "book_quantity", "stu_id"}) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Make all cells uneditable
                }
            };

            tblConfirm.setModel(model);
            txtEnterName.setText("");
            txtQty.setText("");
            id_stu.setText("");
            txtDborrow.setText("");

            displayIDBooks( idint);
    
         
    }                                         
//    void clearfields(){
//        txtEnterName.setText("");
//        txtQty.setText("");
//        id_stu.setText("");
//    }
    private void tblConfirmMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        int i = tblConfirm.getSelectedRow();
        TableModel model = tblConfirm.getModel();
        txtEnterName.setText(model.getValueAt(i,1).toString());
        txtQty.setText(model.getValueAt(i,2).toString());
        id_stu.setText(model.getValueAt(i,3).toString());
        txtDborrow.setText(model.getValueAt(i,4).toString());
        
    }                                       

    private void comboGenreActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        String genreofbook = comboGenre.getSelectedItem().toString();
        
    }                                          

    private void btnGenreActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        String genre = comboGenre.getSelectedItem().toString();
        
        if(genre.equals("CLASSIC")){
            displayBooks2(genre);
        }else if(genre.equals("GRAPHIC NOVEL")){
            displayBooks2(genre);
        }else if (genre.equals("MYSTERY")){
            displayBooks2(genre);
        }else if (genre.equals("DOCUMENTARY")){
            displayBooks2(genre);
        }
    }                                        

    private void txtEnterNameActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void id_stuActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    /**
     * @param args the command line arguments
     */
   
    public void displayIDBooks(int idhold){
        Object[][] data=null;
        String[] columnNames ={"book_id","book_name","book_quantity","stu_id","date_borrow"};
        DefaultTableModel displayModel = new DefaultTableModel(data,columnNames){
            
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblConfirm.getTableHeader().setResizingAllowed(false);
        tblConfirm.getTableHeader().setReorderingAllowed(false);
        tblConfirm.setModel(displayModel);
        try(Connection conn = DatabaseConnector.getConnection()){
            String sql = "SELECT * FROM public.borrowed_books WHERE stu_id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
                    stmt.setInt(1, idhold);
                    ResultSet rs = stmt.executeQuery();
                while (rs.next()){
                    String book_id = String.valueOf(rs.getInt("book_id"));
                    String book_name = rs.getString("book_name");
                    String book_quantity = String.valueOf(rs.getInt("book_quantity"));
                    String stu_id = String.valueOf(rs.getInt("stu_id"));
                    String date_borrow = rs.getString("date_borrow");
                    String list[] = {book_id,book_name,book_quantity,stu_id,date_borrow};
                    DefaultTableModel tblModel = (DefaultTableModel)tblConfirm.getModel();
                    tblModel.addRow(list);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Database connection error: " + e.getMessage());
            
        }
         
    }
    public void displayBooks(){
        Object[][] data=null;
        String[] columnNames ={"book_id","book_name","book_quantity","book_author"};
        DefaultTableModel displayModel = new DefaultTableModel(data,columnNames){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblLibraryBooks.getTableHeader().setResizingAllowed(false);
        tblLibraryBooks.getTableHeader().setReorderingAllowed(false);
        tblLibraryBooks.setModel(displayModel);
        try(Connection conn = DatabaseConnector.getConnection()){
            String sql = "SELECT * FROM public.library_books ORDER BY book_id ASC";
            try(PreparedStatement stmt = conn.prepareStatement(sql);
                    ResultSet rs = stmt.executeQuery()) {
                while (rs.next()){
                  
                    String book_id = String.valueOf(rs.getInt("book_id"));
                    String book_name = rs.getString("book_name");
                    String book_quantity = String.valueOf(rs.getInt("book_quantity"));
                    String book_author = rs.getString("book_author");
                  String list[] = {book_id,book_name,book_quantity,book_author};
                    DefaultTableModel tblModel = (DefaultTableModel)tblLibraryBooks.getModel();
                    tblModel.addRow(list);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Database connection error: " + e.getMessage());
            
        }
         
    }
    
    public void displayBooks2(String book_genre){
        Object[][] data=null;
        String[] columnNames ={"book_id","book_name","book_quantity","book_author"};
        DefaultTableModel displayModel = new DefaultTableModel(data,columnNames){
            
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblLibraryBooks.getTableHeader().setResizingAllowed(false);
        tblLibraryBooks.getTableHeader().setReorderingAllowed(false);
        tblLibraryBooks.setModel(displayModel);
        try(Connection conn = DatabaseConnector.getConnection()){
            String sql = "SELECT * FROM public.library_books WHERE book_genre = ? ";
            PreparedStatement stmt = conn.prepareStatement(sql);
                    stmt.setString(1, book_genre);
                    ResultSet rs = stmt.executeQuery();
                while (rs.next()){
                    String book_id = String.valueOf(rs.getInt("book_id"));
                    String book_name = rs.getString("book_name");
                    String book_quantity = String.valueOf(rs.getInt("book_quantity"));
                    String book_author = rs.getString("book_author");
                    String list[] = {book_id,book_name,book_quantity,book_author};
                    DefaultTableModel tblModel = (DefaultTableModel)tblLibraryBooks.getModel();
                    tblModel.addRow(list);
                }
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Database connection error: " + e.getMessage());
            
        }
    }

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomLibrary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnGenre;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSubmitInfo;
    private javax.swing.JButton btnUserLogout;
    private javax.swing.JComboBox<String> comboBox2;
    private javax.swing.JComboBox<String> comboGenre;
    private javax.swing.JTextField id_stu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel l_date;
    private javax.swing.JLabel lblBook;
    private javax.swing.JLabel lblEnterId;
    private javax.swing.JLabel lblQuantity;
    public javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel r_date;
    public static javax.swing.JLabel studentID11;
    public javax.swing.JTable tblConfirm;
    private javax.swing.JTable tblLibraryBooks;
    private javax.swing.JTextField txtBookLists;
    private javax.swing.JTextField txtDborrow;
    private javax.swing.JTextField txtEnterName;
    private javax.swing.JTextField txtQty;
    // End of variables declaration                   
}
